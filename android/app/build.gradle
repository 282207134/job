plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services' // Firebase 服务插件
    // END: FlutterFire Configuration
    id "kotlin-android" // Kotlin 插件
    id "dev.flutter.flutter-gradle-plugin" // Flutter Gradle 插件
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode', '1') // 提供默认值
def flutterVersionName = localProperties.getProperty('flutter.versionName', '1.0') // 提供默认值

android {
    namespace "com.example.job" // 应用名称
    compileSdk flutter.compileSdkVersion // 使用 Flutter 提供的编译 SDK 版本

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8' // 定义 Kotlin 版本
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin' // Kotlin 源目录
    }

    defaultConfig {
        applicationId "com.example.job" // 唯一应用 ID
        minSdkVersion flutter.minSdkVersion // 设置最小 SDK 版本
        targetSdkVersion flutter.targetSdkVersion // 设置目标 SDK 版本
        versionCode flutterVersionCode.toInteger() // 版本代码
        versionName flutterVersionName // 版本名称
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug // 使用调试签名配置
        }
    }
}

flutter {
    source '../..' // 指向 Flutter SDK 的根目录
}

// 在此处添加任何依赖项
dependencies {
    // 示例依赖：
    // implementation 'com.google.firebase:firebase-analytics-ktx:21.3.1' // 示例 Firebase 依赖
}
